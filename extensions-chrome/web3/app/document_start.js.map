{"version":3,"file":"./document_start.js","mappings":";;;;;AAAA,oBAAoB;;AAEpB;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,sEAAsE;;AAEtE;AACA;AACA;AACA;;;AAGA;AACA,oEAAoE;AACpE,GAAG;;AAEH,sCAAsC,cAAc;;AAEpD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,qCAAqC;AAChE;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA,CAAC","sources":["webpack://web3/./src/document_start.js"],"sourcesContent":["(function(chrome) { //content script isolated\n\n  //proxy post messages from context script to internal dom\n\n  var s = document.createElement('script');\n  s.src = chrome.runtime.getURL('app/document_load.js');\n  s.onload = function() {\n    this.remove();\n  };\n  (document.head || document.documentElement).appendChild(s);\n\n\n  var startCode = `if(window.web3 && typeof window.web3.start == \"function\" )\n                    window.web3.start();\n                   document.documentElement.removeAttribute('onload');`;\n\n  var onload = document.documentElement.getAttribute('onload');\n  if (!onload) {\n    document.documentElement.setAttribute('onload', startCode);\n  }\n\n\n  window.addEventListener(\"load\", async(event) => {\n    document.documentElement.dispatchEvent(new CustomEvent('load'));/* globals CustomEvent */\n  });\n\n  var port = chrome.runtime.connect({ name: \"main\" });\n\n  port.onMessage.addListener(messageListen);\n\n  window.addEventListener(\"message\", async(event) => {\n    // We only accept messages from ourselves\n    if (event.source != window) {\n      return;\n    }\n\n    if (event.data) {\n      if (!event.data.type || !(event.data.type == \"FROM_BACKGROUND\")) {\n        console.log(\"Content script received:\", event.data);\n        port.postMessage({ type: \"FROM_PAGE\", data: event.data });\n      }\n\n    }\n  }, false);\n\n  async function messageListen(msg) {\n    window.postMessage(msg, \"*\");\n  }\n\n}(window.chrome));\n"],"names":[],"sourceRoot":""}